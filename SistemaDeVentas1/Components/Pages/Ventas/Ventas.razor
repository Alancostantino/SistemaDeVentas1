@page "/registrar-venta"
@using SistemaDeVentas1.Interfaces
@using SistemaDeVentas1.Models
@inject IProductService ProductService
@inject IVentaRepositorio VentaRepositorio

<h3>Registrar Venta</h3>

<div class="row">
    <div class="col-md-6">
        <h4>Vehículos Disponibles</h4>
        @if (!string.IsNullOrEmpty(MensajeExito))

        {
            <div class="alert alert-success d-flex align-items-center justify-content-center position-fixed"
                 role="alert"
                 style="z-index: 1050; max-width: 400px; top: 60%; right: 15%; transform: translateY(-50%);">
                <div>
                    <strong>¡Venta registrada exitosamente!</strong><br />
                    Número de venta: <span class="fw-bold">@NumeroVentaRegistrada</span>
                </div>
                <button type="button" class="btn-close ms-3" aria-label="Close" @onclick="CerrarMensaje"></button>
            </div>
        }
        

        <div class="row mb-3">
            <div class="col-md-8">
                <input type="text" class="form-control" placeholder="Filtrar por TipoVehiculo o Marca" @bind="Filtro" />
            </div>
            <div class="col-md-4 d-flex gap-2">
                <button class="btn btn-primary btn-sm w-100" @onclick="FiltrarVehiculos">Filtrar</button>
                <button class="btn btn-danger btn-sm w-100" @onclick="LimpiarFiltro">Limpiar</button>
            </div>
        </div>

        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Tipo</th>
                    <th>Marca</th>
                    <th>Modelo</th>
                    <th>Año</th>
                    <th>Precio</th>
                    <th>Acción</th>
                </tr>
            </thead>
            <tbody>
                @if (VehiculosFiltrados.Any())

                {
                    @foreach (var vehiculo in VehiculosFiltrados)
                    {
                        <tr>
                            <td>@vehiculo.TipoVehiculo</td>
                            <td>@vehiculo.Marca</td>
                            <td>@vehiculo.Modelo</td>
                            <td>@vehiculo.Anio</td>
                            <td>@vehiculo.Precio.ToString("F2")</td>
                            <td class="text-center">
                                <button class="btn btn-success btn-sm" @onclick="() => SeleccionarVehiculo(vehiculo)">+</button>
                            </td>
                        </tr>
                    }
                }

                else

                {
                    <tr>
                        <td colspan="6" class="text-center">No se encontraron vehículos disponibles.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="col-md-6">
        <h4>Detalles de la Venta</h4>
        @if (VehiculoSeleccionado != null)

        {
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">Vehículo Seleccionado</h5>
                    <p><strong>Tipo:</strong> @VehiculoSeleccionado.TipoVehiculo</p>
                    <p><strong>Marca:</strong> @VehiculoSeleccionado.Marca</p>
                    <p><strong>Modelo:</strong> @VehiculoSeleccionado.Modelo</p>
                    <p><strong>Año:</strong> @VehiculoSeleccionado.Anio</p>
                    <p><strong>Precio:</strong> @VehiculoSeleccionado.Precio.ToString("F2")</p>
                </div>
            </div>

            <div class="mt-3">
                <label>Cliente:</label>
                <input type="text" class="form-control" @bind="Cliente" />

                <label class="mt-2">Tipo de Pago:</label>
                <select class="form-control" @bind="TipoPago">
                    <option value="Efectivo">Efectivo</option>
                    <option value="Tarjeta">Tarjeta</option>
                    <option value="Transferencia">Transferencia</option>
                </select>

                <div class="text-center">
                    <button class="btn btn-primary btn-sm mt-3" @onclick="RegistrarVenta">Registrar Venta</button>
                </div>
            </div>
        }

        else

        {
            <p>Seleccione un vehículo para registrar una venta.</p>
        }
    </div>
</div>

@code {
    private List<Product> Vehiculos = new();

    private List<Product> VehiculosFiltrados = new();

    private Product? VehiculoSeleccionado;

    private string Cliente = string.Empty;

    private string TipoPago = "Efectivo";

    private string Filtro = string.Empty;

    private string? MensajeExito;

    private string? NumeroVentaRegistrada;



    protected override async Task OnInitializedAsync()

    {

        Vehiculos = (await ProductService.GetAllProductAsync())

            .Where(v => !v.Estado.Equals("Reservado", StringComparison.OrdinalIgnoreCase))

            .ToList();

        VehiculosFiltrados = Vehiculos;

    }



    private void FiltrarVehiculos()

    {

        if (string.IsNullOrWhiteSpace(Filtro))

        {

            VehiculosFiltrados = Vehiculos;

        }

        else

        {

            VehiculosFiltrados = Vehiculos.Where(v =>

                v.TipoVehiculo.Contains(Filtro, StringComparison.OrdinalIgnoreCase) ||

                v.Marca.Contains(Filtro, StringComparison.OrdinalIgnoreCase)).ToList();

        }

    }



    private void LimpiarFiltro()

    {

        Filtro = string.Empty;

        VehiculosFiltrados = Vehiculos;

    }



    private void SeleccionarVehiculo(Product vehiculo)

    {

        VehiculoSeleccionado = vehiculo;

    }







    private async Task RegistrarVenta()

    {

        if (VehiculoSeleccionado == null) return;



        var nuevaVenta = new Venta

            {

                IdVehiculo = VehiculoSeleccionado.Id,

                DescripcionVehiculo = $"{VehiculoSeleccionado.Marca} {VehiculoSeleccionado.Modelo} ({VehiculoSeleccionado.Anio})",

                PrecioVenta = VehiculoSeleccionado.Precio,

                Cliente = Cliente,

                TipoPago = TipoPago

            };



        try

        {

            var ventaRegistrada = await VentaRepositorio.Registrar(nuevaVenta);

            NumeroVentaRegistrada = ventaRegistrada.NumeroVenta;

            MensajeExito = "Venta registrada exitosamente.";



            VehiculoSeleccionado = null;

            Cliente = string.Empty;

            TipoPago = "Efectivo";



            StateHasChanged();



            // Ocultar el mensaje después de 3 segundos

            await Task.Delay(6000);

            MensajeExito = null;

            StateHasChanged();

        }

        catch (Exception ex)

        {

            Console.WriteLine($"Error al registrar la venta: {ex.Message}");

        }

    }







    private void CerrarMensaje()

    {

        MensajeExito = null;

    }
}
@page "/historial-venta"
@using OfficeOpenXml
@using SistemaDeVentas1.Interfaces
@using SistemaDeVentas1.Models
@inject IJSRuntime JSRuntime
@inject IVentaRepositorio VentaRepositorio

<div class="text-center">
    <h3>Historial de Ventas</h3>
</div>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12 mb-3">
            <label for="numeroVenta">Buscar por Número de Venta:</label>
            <input id="numeroVenta" type="text" class="form-control" placeholder="Número de Venta" @bind="FiltroNumeroVenta" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label for="fechaInicio">Fecha Inicio:</label>
            <input id="fechaInicio" type="date" class="form-control" @bind="FiltroFechaInicio" />
        </div>
        <div class="col-md-6">
            <label for="fechaFin">Fecha Fin:</label>
            <input id="fechaFin" type="date" class="form-control" @bind="FiltroFechaFin" />
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-md-12 text-center">
            <button class="btn btn-primary me-2" @onclick="FiltrarHistorial">Filtrar</button>
            <button class="btn btn-success" @onclick="ExportarAExcel">Exportar a Excel</button>
        </div>
    </div>
</div>

<table class="table table-striped table-bordered mt-4">
    <thead>
        <tr>
            <th>Número de Venta</th>
            <th>Fecha</th>
            <th>Cliente</th>
            <th>Vehículo</th>
            <th>Precio</th>
            <th>Tipo de Pago</th>
        </tr>
    </thead>
    <tbody>
        @if (VentasFiltradas.Any())

        {
            @foreach (var venta in VentasFiltradas)

            {
                <tr>
                    <td>@venta.NumeroVenta</td>
                    <td>@venta.FechaRegistro?.ToString("dd/MM/yyyy")</td>
                    <td>@venta.Cliente</td>
                    <td>@venta.DescripcionVehiculo</td>
                    <td>@venta.PrecioVenta.ToString("F2")</td>
                    <td>@venta.TipoPago</td>
                </tr>
            }
        }

        else

        {
            <tr>
                <td colspan="6" class="text-center">No se encontraron ventas con los criterios seleccionados.</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Venta> VentasFiltradas = new();

    private string FiltroNumeroVenta = string.Empty;

    private DateTime? FiltroFechaInicio;

    private DateTime? FiltroFechaFin;



    private async Task FiltrarHistorial()

    {

        try

        {

            string fechaInicio = FiltroFechaInicio.HasValue ? FiltroFechaInicio.Value.ToString("yyyy-MM-dd") : null;

            string fechaFin = FiltroFechaFin.HasValue ? FiltroFechaFin.Value.ToString("yyyy-MM-dd") : null;



            VentasFiltradas = await VentaRepositorio.Historial(FiltroNumeroVenta, fechaInicio, fechaFin);

        }

        catch (Exception ex)

        {

            await JSRuntime.InvokeVoidAsync("alert", $"Error al filtrar el historial: {ex.Message}");

        }

    }



    private async Task ExportarAExcel()

    {

        try

        {

            if (!VentasFiltradas.Any())

            {

                await JSRuntime.InvokeVoidAsync("alert", "No hay datos para exportar.");

                return;

            }



            using var memoryStream = new MemoryStream();

            ExcelPackage.LicenseContext = LicenseContext.NonCommercial;



            using (var package = new ExcelPackage(memoryStream))

            {

                var worksheet = package.Workbook.Worksheets.Add("Historial de Ventas");

                worksheet.Cells["A1"].Value = "Número de Venta";

                worksheet.Cells["B1"].Value = "Fecha";

                worksheet.Cells["C1"].Value = "Cliente";

                worksheet.Cells["D1"].Value = "Vehículo";

                worksheet.Cells["E1"].Value = "Precio";

                worksheet.Cells["F1"].Value = "Tipo de Pago";



                for (int i = 0; i < VentasFiltradas.Count; i++)

                {

                    var venta = VentasFiltradas[i];

                    worksheet.Cells[i + 2, 1].Value = venta.NumeroVenta;

                    worksheet.Cells[i + 2, 2].Value = venta.FechaRegistro?.ToString("dd/MM/yyyy");

                    worksheet.Cells[i + 2, 3].Value = venta.Cliente;

                    worksheet.Cells[i + 2, 4].Value = venta.DescripcionVehiculo;

                    worksheet.Cells[i + 2, 5].Value = venta.PrecioVenta;

                    worksheet.Cells[i + 2, 6].Value = venta.TipoPago;

                }



                worksheet.Cells[worksheet.Dimension.Address].AutoFitColumns();

                package.Save();

            }



            memoryStream.Position = 0;



            var fileName = $"Historial_Ventas_{DateTime.Now:yyyyMMddHHmmss}.xlsx";

            await JSRuntime.InvokeVoidAsync("downloadFile", Convert.ToBase64String(memoryStream.ToArray()), fileName);

        }

        catch (Exception ex)

        {

            await JSRuntime.InvokeVoidAsync("alert", $"Error al exportar a Excel: {ex.Message}");

        }

    }
}
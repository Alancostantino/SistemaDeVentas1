@page "/editar/vehiculos/{id:int}"
@using SistemaDeVentas1.Interfaces
@using SistemaDeVentas1.Models
@inject IProductService ProductService
@inject NavigationManager navigation
@inject IJSRuntime JsRuntime

<h3>Editar Vehiculo</h3>

<hr />

<div class="row">
    <div class="col-md-12">
        <EditForm Model="productobj" OnValidSubmit="EditProduct" FormName="EditProduct">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <!-- Contenedor principal -->
            <div class="row">
                <!-- Primera columna -->
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label">Tipo de Vehiculo</label>
                        <InputText class="form-control" @bind-Value="@productobj.TipoVehiculo" />
                        <ValidationMessage For="()=>productobj.TipoVehiculo" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Marca</label>
                        <InputText class="form-control" @bind-Value="@productobj.Marca" />
                        <ValidationMessage For="()=>productobj.Marca" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Modelo</label>
                        <InputText class="form-control" @bind-Value="@productobj.Modelo" />
                        <ValidationMessage For="()=>productobj.Modelo" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Año</label>
                        <InputNumber class="form-control" @bind-Value="@productobj.Anio" />
                        <ValidationMessage For="()=>productobj.Anio" />
                    </div>
                </div>

                <!-- Segunda columna -->
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label">Color</label>
                        <InputText class="form-control" @bind-Value="@productobj.Color" />
                        <ValidationMessage For="()=>productobj.Color" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Kilometraje</label>
                        <InputNumber class="form-control" @bind-Value="@productobj.Kilometraje" />
                        <ValidationMessage For="()=>productobj.Kilometraje" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Precio</label>
                        <InputNumber class="form-control" @bind-Value="@productobj.Precio" />
                        <ValidationMessage For="()=>productobj.Precio" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Fecha de ingreso</label>
                        <InputDate class="form-control" @bind-Value="@productobj.FechaIngreso" />
                        <ValidationMessage For="()=>productobj.FechaIngreso" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Estado</label>
                        <InputText class="form-control" @bind-Value="@productobj.Estado" />
                        <ValidationMessage For="()=>productobj.Estado" />
                    </div>
                </div>
            </div>

            <!-- Botones -->
            <div class="form-group mt-4 text-center">
                <button type="submit" class="btn btn-primary" @onclick="EditProduct">Editar Vehiculo</button>
                <button type="button" @onclick="Cancel" class="btn btn-danger">Cancelar</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public Product productobj { get; set; } = new()
        {
            TipoVehiculo = string.Empty,
            Marca = string.Empty,
            Modelo = string.Empty,
            Anio = 0,
            Color = string.Empty,
            Kilometraje = 0,
            Precio = 0,
            FechaIngreso = DateTime.Now,
            Estado = string.Empty
        };

    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()

    {
        // Carga los productos al inicializar el componente.
        await LoadProducts();
    }


    private async Task LoadProducts()

    {
        productobj = await ProductService.GetProductByIdAsync(id);
    }


    protected async Task EditProduct()
    {
        var result = await ProductService.UpdateProductAsync(id, productobj);
        if (result != null)
        {
            navigation.NavigateTo("/vehiculos-list");
        }
        else
        {
            Console.WriteLine("Error al actualizar el producto.");
        }
    }

    public void Cancel()
    {
        navigation.NavigateTo("/vehiculos-list");
    }
}